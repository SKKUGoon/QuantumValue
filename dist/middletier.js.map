{"version":3,"file":"middletier.js","mappings":"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","sources":["webpack://office-addin-taskpane-sso/./src/middle-tier/app.ts","webpack://office-addin-taskpane-sso/./src/middle-tier/msgraph-helper.ts","webpack://office-addin-taskpane-sso/./src/middle-tier/ssoauth-helper.ts","webpack://office-addin-taskpane-sso/external commonjs \"cookie-parser\"","webpack://office-addin-taskpane-sso/external commonjs \"dotenv\"","webpack://office-addin-taskpane-sso/external commonjs \"express\"","webpack://office-addin-taskpane-sso/external commonjs \"form-urlencoded\"","webpack://office-addin-taskpane-sso/external commonjs \"http-errors\"","webpack://office-addin-taskpane-sso/external commonjs \"jsonwebtoken\"","webpack://office-addin-taskpane-sso/external commonjs \"jwks-rsa\"","webpack://office-addin-taskpane-sso/external commonjs \"morgan\"","webpack://office-addin-taskpane-sso/external commonjs \"node-fetch\"","webpack://office-addin-taskpane-sso/external commonjs \"office-addin-dev-certs\"","webpack://office-addin-taskpane-sso/external commonjs \"path\"","webpack://office-addin-taskpane-sso/external node-commonjs \"https\"","webpack://office-addin-taskpane-sso/webpack/bootstrap","webpack://office-addin-taskpane-sso/webpack/before-startup","webpack://office-addin-taskpane-sso/webpack/startup","webpack://office-addin-taskpane-sso/webpack/after-startup"],"sourcesContent":["import createError from \"http-errors\";\nimport * as path from \"path\";\nimport cookieParser from \"cookie-parser\";\nimport logger from \"morgan\";\nimport express from \"express\";\nimport https from \"https\";\nimport { getHttpsServerOptions } from \"office-addin-dev-certs\";\nimport { getUserData } from \"./msgraph-helper\";\nimport { validateJwt } from \"./ssoauth-helper\";\n\n/* global console, process, require, __dirname */\n\nconst app = express();\nconst port: number | string = process.env.API_PORT || \"3000\";\n\napp.set(\"port\", port);\n\n// view engine setup\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"pug\");\n\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n/* Turn off caching when developing */\nif (process.env.NODE_ENV !== \"production\") {\n  app.use(express.static(path.join(process.cwd(), \"dist\"), { etag: false }));\n\n  app.use(function (req, res, next) {\n    res.header(\"Cache-Control\", \"private, no-cache, no-store, must-revalidate\");\n    res.header(\"Expires\", \"-1\");\n    res.header(\"Pragma\", \"no-cache\");\n    next();\n  });\n} else {\n  // In production mode, let static files be cached.\n  app.use(express.static(path.join(process.cwd(), \"dist\")));\n}\n\nconst indexRouter = express.Router();\nindexRouter.get(\"/\", function (req, res) {\n  res.render(\"/taskpane.html\");\n});\n\napp.use(\"/\", indexRouter);\n\n// Middle-tier API calls\n// listen for 'ping' to verify service is running\n// Un comment for development debugging, but un needed for production deployment\n// app.get(\"/ping\", function (req: any, res: any) {\n//   res.send(process.platform);\n// });\n\n//app.get(\"/getuserdata\", validateJwt, getUserData);\napp.get(\"/getuserdata\", validateJwt, getUserData);\n\n// Get the client side task pane files requested\napp.get(\"/taskpane.html\", async (req: any, res: any) => {\n  return res.sendfile(\"taskpane.html\");\n});\n\napp.get(\"/fallbackauthdialog.html\", async (req: any, res: any) => {\n  return res.sendfile(\"fallbackauthdialog.html\");\n});\n\n// Catch 404 and forward to error handler\napp.use(function (req: any, res: any, next: any) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function (err: any, req: any, res: any) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\n\ngetHttpsServerOptions().then((options) => {\n  https\n    .createServer(options, app)\n    .listen(port, () => console.log(`Server running on ${port} in ${process.env.NODE_ENV} mode`));\n});\n/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file is the main Node.js server file that defines the express middleware.\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config();\n}\n","// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in the root of the repo.\n/*\n    This file provides the provides functionality to get Microsoft Graph data.\n*/\nimport * as https from \"https\";\nimport { getAccessToken } from \"./ssoauth-helper\";\nimport createError from \"http-errors\";\n\n/* global process */\n\nconst domain: string = \"graph.microsoft.com\";\nconst version: string = \"v1.0\";\n\nexport async function getUserData(req: any, res: any, next: any) {\n  const authorization: string = req.get(\"Authorization\");\n\n  await getAccessToken(authorization)\n    .then(async (graphTokenResponse) => {\n      if (graphTokenResponse && (graphTokenResponse.claims || graphTokenResponse.error)) {\n        res.send(graphTokenResponse);\n      } else {\n        const graphToken: string = graphTokenResponse.access_token;\n        const graphUrlSegment: string = process.env.GRAPH_URL_SEGMENT || \"/me\";\n        const graphQueryParamSegment: string = process.env.QUERY_PARAM_SEGMENT || \"\";\n\n        const graphData = await getGraphData(graphToken, graphUrlSegment, graphQueryParamSegment);\n\n        // If Microsoft Graph returns an error, such as invalid or expired token,\n        // there will be a code property in the returned object set to a HTTP status (e.g. 401).\n        // Relay it to the client. It will caught in the fail callback of `makeGraphApiCall`.\n        if (graphData.code) {\n          next(createError(graphData.code, \"Microsoft Graph error \" + JSON.stringify(graphData)));\n        } else {\n          res.send(graphData);\n        }\n      }\n    })\n    .catch((err) => {\n      res.status(401).send(err.message);\n      return;\n    });\n}\n\nexport async function getGraphData(accessToken: string, apiUrl: string, queryParams?: string): Promise<any> {\n  return new Promise<any>((resolve, reject) => {\n    const options: https.RequestOptions = {\n      host: domain,\n      path: \"/\" + version + apiUrl + queryParams,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n        \"Cache-Control\": \"private, no-cache, no-store, must-revalidate\",\n        Expires: \"-1\",\n        Pragma: \"no-cache\",\n      },\n    };\n\n    https\n      .get(options, (response) => {\n        let body = \"\";\n        response.on(\"data\", (d) => {\n          body += d;\n        });\n        response.on(\"end\", () => {\n          // The response from the OData endpoint might be an error, say a\n          // 401 if the endpoint requires an access token and it was invalid\n          // or expired. But a message is not an error in the call of https.get,\n          // so the \"on('error', reject)\" line below isn't triggered.\n          // So, the code distinguishes success (200) messages from error\n          // messages and sends a JSON object to the caller with either the\n          // requested OData or error information.\n\n          let error;\n          if (response.statusCode === 200) {\n            let parsedBody = JSON.parse(body);\n            resolve(parsedBody);\n          } else {\n            error = new Error();\n            error.code = response.statusCode;\n            error.message = response.statusMessage;\n\n            // The error body sometimes includes an empty space\n            // before the first character, remove it or it causes an error.\n            body = body.trim();\n            error.bodyCode = JSON.parse(body).error.code;\n            error.bodyMessage = JSON.parse(body).error.message;\n            resolve(error);\n          }\n        });\n      })\n      .on(\"error\", reject);\n  });\n}\n","/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file defines the routes within the authRoute router.\n */\n\nimport fetch from \"node-fetch\";\nimport form from \"form-urlencoded\";\nimport jwt from \"jsonwebtoken\";\nimport { JwksClient } from \"jwks-rsa\";\n\n/* global process, console */\n\nconst DISCOVERY_KEYS_ENDPOINT = \"https://login.microsoftonline.com/common/discovery/v2.0/keys\";\n\nexport async function getAccessToken(authorization: string): Promise<any> {\n  if (!authorization) {\n    let error = new Error(\"No Authorization header was found.\");\n    return Promise.reject(error);\n  } else {\n    const scopeName: string = process.env.SCOPE || \"User.Read\";\n    const [, /* schema */ assertion] = authorization.split(\" \");\n\n    const tokenScopes = (jwt.decode(assertion) as jwt.JwtPayload).scp.split(\" \");\n    const accessAsUserScope = tokenScopes.find((scope) => scope === \"access_as_user\");\n    if (!accessAsUserScope) {\n      throw new Error(\"Missing access_as_user\");\n    }\n\n    const formParams = {\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET,\n      grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n      assertion: assertion,\n      requested_token_use: \"on_behalf_of\",\n      scope: [scopeName].join(\" \"),\n    };\n\n    const stsDomain: string = \"https://login.microsoftonline.com\";\n    const tenant: string = \"common\";\n    const tokenURLSegment: string = \"oauth2/v2.0/token\";\n    const encodedForm = form(formParams);\n\n    const tokenResponse = await fetch(`${stsDomain}/${tenant}/${tokenURLSegment}`, {\n      method: \"POST\",\n      body: encodedForm,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    });\n    const json = await tokenResponse.json();\n    return json;\n  }\n}\n\nexport function validateJwt(req, res, next): void {\n  const authHeader = req.headers.authorization;\n  if (authHeader) {\n    const token = authHeader.split(\" \")[1];\n\n    const validationOptions = {\n      audience: process.env.CLIENT_ID,\n    };\n\n    jwt.verify(token, getSigningKeys, validationOptions, (err) => {\n      if (err) {\n        console.log(err);\n        return res.sendStatus(403);\n      }\n\n      next();\n    });\n  }\n}\n\nfunction getSigningKeys(header: any, callback: any) {\n  var client: JwksClient = new JwksClient({\n    jwksUri: DISCOVERY_KEYS_ENDPOINT,\n  });\n\n  client.getSigningKey(header.kid, function (err, key) {\n    callback(null, key.getPublicKey());\n  });\n}\n","module.exports = require(\"cookie-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"form-urlencoded\");","module.exports = require(\"http-errors\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"morgan\");","module.exports = require(\"node-fetch\");","module.exports = require(\"office-addin-dev-certs\");","module.exports = require(\"path\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/middle-tier/app.ts\");\n",""],"names":["http_errors_1","__importDefault","require","path","__importStar","cookie_parser_1","morgan_1","express_1","https_1","office_addin_dev_certs_1","msgraph_helper_1","ssoauth_helper_1","app","default","port","process","env","API_PORT","set","join","__dirname","use","json","urlencoded","extended","NODE_ENV","static","cwd","etag","req","res","next","header","indexRouter","Router","get","render","validateJwt","getUserData","__awaiter","sendfile","err","locals","message","error","status","getHttpsServerOptions","then","options","createServer","listen","console","log","concat","config","https","domain","version","authorization","getAccessToken","graphTokenResponse","_this","claims","send","graphToken","access_token","graphUrlSegment","GRAPH_URL_SEGMENT","graphQueryParamSegment","QUERY_PARAM_SEGMENT","getGraphData","graphData","_a","sent","code","JSON","stringify","catch","exports","accessToken","apiUrl","queryParams","Promise","resolve","reject","host","method","headers","Accept","Authorization","Expires","Pragma","response","body","on","d","statusCode","parsedBody","parse","Error","statusMessage","trim","bodyCode","bodyMessage","node_fetch_1","form_urlencoded_1","jsonwebtoken_1","jwks_rsa_1","DISCOVERY_KEYS_ENDPOINT","scopeName","SCOPE","split","assertion","tokenScopes","decode","scp","accessAsUserScope","find","scope","formParams","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","grant_type","requested_token_use","stsDomain","tenant","tokenURLSegment","encodedForm","tokenResponse","_b","authHeader","token","validationOptions","audience","verify","getSigningKeys","sendStatus","callback","client","JwksClient","jwksUri","getSigningKey","kid","key","getPublicKey"],"sourceRoot":""}